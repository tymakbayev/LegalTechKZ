"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ ReAct –∞–≥–µ–Ω—Ç–∞

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –∞–≥–µ–Ω—Ç:
1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å—é
2. –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Å—ã–ª–∫–∏
3. –ò—â–µ—Ç –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—é
4. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã
5. –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ
"""

import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('logs/react_agent_test.log', encoding='utf-8')
    ]
)

from legaltechkz.agents.constitutionality_react_agent import ConstitutionalityReActAgent
from legaltechkz.models.model_router import ModelRouter
from legaltechkz.expertise.document_parser import DocumentFragment


def test_react_agent():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ReAct –∞–≥–µ–Ω—Ç–∞ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ —Å—Ç–∞—Ç—å–∏."""

    print("\n" + "="*80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø ReAct –ê–ì–ï–ù–¢–ê")
    print("="*80 + "\n")

    # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
    model_router = ModelRouter(enable_auto_selection=True)
    model = model_router.select_model_for_pipeline_stage("analysis")

    print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å: {model.model_name}\n")

    # –°–æ–∑–¥–∞–µ–º ReAct –∞–≥–µ–Ω—Ç–∞
    agent = ConstitutionalityReActAgent(model)

    # –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è (–ø—Ä–∏–º–µ—Ä)
    test_article = DocumentFragment(
        type="article",
        number=15,
        text="""–°—Ç–∞—Ç—å—è 15. –¶–∏—Ñ—Ä–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –≥—Ä–∞–∂–¥–∞–Ω

1. –ö–∞–∂–¥—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —É—Å–ª—É–≥–∞–º.

2. –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –∑–∞—â–∏—Ç—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å—Ä–µ–¥–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ó–∞–∫–æ–Ω–æ–º –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω "–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Ö –∑–∞—â–∏—Ç–µ".

3. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ä–µ—à–µ–Ω–∏—è —Å—É–¥–∞ –≤ —Å–ª—É—á–∞—è—Ö, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç–æ—è—â–∏–º –ö–æ–¥–µ–∫—Å–æ–º.

4. –¶–∏—Ñ—Ä–æ–≤—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ–±—è–∑–∞–Ω—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω.""",
        title="–¶–∏—Ñ—Ä–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –≥—Ä–∞–∂–¥–∞–Ω",
        level=0,
        parent_chapter=None,
        parent_paragraph=None
    )

    print("üìÑ –ê–ù–ê–õ–ò–ó–ò–†–£–ï–ú–ê–Ø –°–¢–ê–¢–¨–Ø:")
    print(f"   –ù–æ–º–µ—Ä: {test_article.number}")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {test_article.title}")
    print(f"   –¢–µ–∫—Å—Ç: {test_article.text[:200]}...\n")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
    print("üöÄ –ó–∞–ø—É—Å–∫ ReAct –∞–Ω–∞–ª–∏–∑–∞...\n")
    print("="*80 + "\n")

    result = agent.analyze_article(test_article)

    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "="*80)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê")
    print("="*80 + "\n")

    if result["success"]:
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: –£–°–ü–ï–®–ù–û")
        print(f"üîÑ –ò—Ç–µ—Ä–∞—Ü–∏–π: {result['iterations']}")
        print(f"\nüìã –ê–ù–ê–õ–ò–ó:\n")
        print(result["analysis"])

        print(f"\n\nüß† –ü–†–û–¶–ï–°–° –ú–´–®–õ–ï–ù–ò–Ø –ê–ì–ï–ù–¢–ê:\n")
        print(result["thinking_process"])

    else:
        print(f"‚ùå –°—Ç–∞—Ç—É—Å: –û–®–ò–ë–ö–ê")
        print(f"–û—à–∏–±–∫–∞: {result.get('error')}")

    print("\n" + "="*80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("="*80 + "\n")


if __name__ == "__main__":
    test_react_agent()
